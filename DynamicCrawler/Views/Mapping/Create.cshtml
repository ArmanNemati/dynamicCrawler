@model DynamicCrawler.Models.Mapping


@using (Html.BeginForm("Create","Mapping",FormMethod.Post)) 
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-7">
                @Html.Kendo().TextBoxFor(model=>model.Comments)
                @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Key, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-7">
                @Html.Kendo().TextBoxFor(model => model.Key)
                @Html.ValidationMessageFor(model => model.Key, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.FirstSelector, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-7">
                @Html.Kendo().TextBoxFor(model => model.FirstSelector)
                @Html.ValidationMessageFor(model => model.FirstSelector, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.SecondSelector, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-7">
                @Html.Kendo().TextBoxFor(model => model.SecondSelector)
                @Html.ValidationMessageFor(model => model.SecondSelector, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-3 col-md-10"> 
                @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-default" })
                <input type="submit" value="Create" class="btn btn-success"/> 
            </div>
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
